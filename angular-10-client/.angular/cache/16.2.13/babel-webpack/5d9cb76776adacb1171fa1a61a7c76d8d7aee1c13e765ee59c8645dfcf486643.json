{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminBoardComponent_tr_15_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", role_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r5);\n  }\n}\nfunction AdminBoardComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"select\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminBoardComponent_tr_15_Template_select_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const user_r3 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(user_r3.roles = $event);\n    });\n    i0.ɵɵtemplate(7, AdminBoardComponent_tr_15_option_7_Template, 2, 2, \"option\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\")(9, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AdminBoardComponent_tr_15_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const user_r3 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.updateUserRoles(user_r3));\n    });\n    i0.ɵɵtext(10, \"Update Roles\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AdminBoardComponent_tr_15_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const user_r3 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.deleteUser(user_r3));\n    });\n    i0.ɵɵtext(12, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r3.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r3.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", user_r3.roles);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.allRoles);\n  }\n}\nfunction AdminBoardComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", role_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r10);\n  }\n}\nlet AdminBoardComponent = /*#__PURE__*/(() => {\n  class AdminBoardComponent {\n    constructor(userService) {\n      this.userService = userService;\n      this.users = [];\n      this.allRoles = ['ROLE_USER', 'ROLE_MODERATOR', 'ROLE_ADMIN']; // Define all possible roles\n    }\n\n    ngOnInit() {\n      this.userService.getAllUsers().subscribe(data => {\n        this.users = data;\n        console.log('Users loaded:', this.users); // Afficher les utilisateurs pour vérifier les IDs\n      }, error => {\n        console.error('Error loading users:', error);\n      });\n    }\n    fetchUsers() {\n      this.userService.getAllUsers().subscribe(data => {\n        this.users = data;\n        console.log('Users loaded:', this.users);\n      }, error => {\n        console.error('Error loading users:', error);\n      });\n    }\n    updateUserRoles(user) {\n      this.userService.updateUserRoles(user.id, user.roles).subscribe(response => {\n        console.log('Roles updated successfully:', response);\n        this.fetchUsers(); // Re-fetch users to get updated roles\n      }, error => {\n        console.error('Error updating roles:', error);\n      });\n    }\n    addUser(formValue) {\n      this.userService.addUser(formValue).subscribe(response => {\n        console.log('User added successfully:', response);\n        this.fetchUsers(); // Refresh the user list\n      }, error => {\n        console.error('Error adding user:', error);\n      });\n    }\n    deleteUser(user) {\n      if (confirm(\"Are you sure to delete \" + user.username + \"?\")) {\n        this.userService.deleteUser(user.id).subscribe(response => {\n          console.log(\"User deleted successfully\", response);\n          this.fetchUsers(); // Actualiser la liste après la suppression\n        }, error => {\n          console.error('Error deleting user:', error);\n        });\n      }\n    }\n    static #_ = this.ɵfac = function AdminBoardComponent_Factory(t) {\n      return new (t || AdminBoardComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminBoardComponent,\n      selectors: [[\"app-admin-board\"]],\n      decls: 25,\n      vars: 2,\n      consts: [[1, \"container\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [3, \"submit\"], [\"newUserForm\", \"ngForm\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"username\", \"placeholder\", \"Username\", \"required\", \"\"], [\"type\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"placeholder\", \"Email\", \"required\", \"\"], [\"type\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"placeholder\", \"Password\", \"required\", \"\"], [\"multiple\", \"\", \"ngModel\", \"\", \"name\", \"roles\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [\"multiple\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [3, \"ngValue\"]],\n      template: function AdminBoardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r11 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Manage User Roles\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"table\", 1)(4, \"thead\")(5, \"tr\")(6, \"th\");\n          i0.ɵɵtext(7, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"th\");\n          i0.ɵɵtext(9, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"th\");\n          i0.ɵɵtext(11, \"Roles\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"th\");\n          i0.ɵɵtext(13, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(14, \"tbody\");\n          i0.ɵɵtemplate(15, AdminBoardComponent_tr_15_Template, 13, 4, \"tr\", 2);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"form\", 3, 4);\n          i0.ɵɵlistener(\"submit\", function AdminBoardComponent_Template_form_submit_16_listener() {\n            i0.ɵɵrestoreView(_r11);\n            const _r1 = i0.ɵɵreference(17);\n            return i0.ɵɵresetView(ctx.addUser(_r1.value));\n          });\n          i0.ɵɵelement(18, \"input\", 5)(19, \"input\", 6)(20, \"input\", 7);\n          i0.ɵɵelementStart(21, \"select\", 8);\n          i0.ɵɵtemplate(22, AdminBoardComponent_option_22_Template, 2, 2, \"option\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 10);\n          i0.ɵɵtext(24, \"Add User\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"ngForOf\", ctx.users);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.allRoles);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectMultipleControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm]\n    });\n  }\n  return AdminBoardComponent;\n})();\nexport { AdminBoardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}